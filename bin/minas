#!/usr/bin/env bash

# @BEGIN
#
# @COPYRIGHT BEGIN
# Copyright (C) 2020 Panos I. Papadopoulos <panos1962_AT_gmail_DOT_com>
# @COPYRIGHT END
#
# @FILETYPE BEGIN
# bash
# @FILETYPE END
#
# @FILE BEGIN
# bin/minas —— Μηνιαίο δελτίο αδειών
# @FILE END
#
# @DESCRIPTION BEGIN
# @DESCRIPTION END
#
# @HISTORY BEGIN
# Created: 2021-05-04
# @HISTORY END
#
# @END

# Το παρόν πρόγραμμα διαβάζει κωδικούς δελτίων προσέλευσης/αποχώρησης και
# παράγει συνολικό TSV report ταξινομημένο κατά υπάλληλο (αλφαβητικά) και
# ημερομηνία.

progname="$(basename $0)"

[ -z "${PANDORA_BASEDIR}" ] &&
PANDORA_BASEDIR="/var/opt/pandora"

[ -z "${KARTEL_BASEDIR}" ] &&
KARTEL_BASEDIR="/var/opt/kartel"

[ -z "${LETRAK_BASEDIR}" ] &&
LETRAK_BASEDIR="/var/opt/letrak"

usage() {
	echo "usage: ${progname} [-x] [files...]
       ${progname} -w dekeys..." >&2
	exit 1
}

errs=
exporter="Gnumeric_stf:stf_csv"
www=

while getopts ":xw" opt
do
	case "${opt}" in
	x)
		exporter="Gnumeric_Excel:excel_dsf"
		;;
	w)
		exporter="Gnumeric_Excel:excel_dsf"
		www="$$.xls"
		;;
	:)
		echo "${progname}: -${OPTARG}: option requires an argument" >&2
		errs=1
		;;
	?)
		echo "${progname}: -${OPTARG}: invalid option" >&2
		errs=1
		;;
	esac
done

[ -n "${errs}" ] &&
usage

shift $(expr ${OPTIND} - 1)

[ -n "${www}" ] &&
[ $# -lt 1 ] &&
errs=1

[ -n "${errs}" ] &&
exit 2

if [ -n "${www}" ]; then
	mdir="${LETRAK_BASEDIR}/local/minas"

	if [ -d "${mdir}" ]; then
		find "${mdir}" -type f -a -name '*.xls' -a -mtime +1 -exec rm {} \; 2>/dev/null
	else
		! mkdir --mode="777" "${mdir}" 2>/dev/null &&
		echo "${progname}: ${mdir}: cannot create directory" >&2 &&
		exit 2
	fi

	ofile="${mdir}/${www}"
else
	ofile="fd://1"
fi

LC_ALL="el_GR.UTF-8" awk \
-v pd_progname="${progname}" \
-v www="${www}" \
-f "${PANDORA_BASEDIR}/lib/pandora.awk" \
-f "${KARTEL_BASEDIR}/lib/karteldb.awk" \
-f "${LETRAK_BASEDIR}/lib/minas/minas.awk" "$@" |

sort \
--field-separator=$'\t' \
--key="2,2" \
--key="1,1n" \
--key="4.7,4.8n" \
--key="4.4,4.5n" \
--key="4.1,4.2n" |

ssconvert \
--import-encoding="Gnumeric_stf:stf_csvtab" \
--export-type="${exporter}" \
fd://0 "${ofile}"

[ -n "${www}" ] &&
echo "${www}"
