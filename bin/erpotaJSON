#!/usr/bin/env bash

# @BEGIN
#
# @COPYRIGHT BEGIN
# Copyright (C) 2020 Panos I. Papadopoulos <panos1962_AT_gmail_DOT_com>
# @COPYRIGHT END
#
# @FILETYPE BEGIN
# bash
# @FILETYPE END
#
# @FILE BEGIN
# bin/erpotaJSON —— Δημιουργία JSON cache file δεδομένων προσωπικού
# @FILE END
#
# @DESCRIPTION BEGIN
# Το παρόν πρόγραμμα δημιουργεί cache file με ένα ενιαίο JSON object στο
# οποίο περιλαμβάνονται ως arrays ο πίνακας των υπηρεσιών ("ipiresia") και
# ο πίνακας των υπαλλήλων ("ipalilos").
#
# Το πρόγραμμα πρέπει να τρέχει με μία παράμετρο που δείχνει την version
# της "erpota" database που θα χρησιμοποιηθεί (1 ή 2).
#
# Το περιεχόμενο του cache file που θα δημιουργηθεί έχει την παρακάτω μορφή:
#
#	self.LETRAK.erpotaData = {
#		version: version_number,
#		ipiresia:[
#			...
#		],
#		ipalilos:[
#			...
#		],
#		error: error_message
#	};
#
# Το cache file δημιουργείται στο directory "local/erpota" και φέρει ονομασία
# της μορφής "eportaV.json" όπου "V" είναι data version (1 ή 2). Παράλληλα
# δημιουργείται symbolic link στο directory "www/public", που δείχνει στο
# cache file που δημιουργήθηκε και φέρει το όνομα "erpotaData.js". Το εν
# λόγω αρχείο «φορτώνεται» ως javascript script στη σελίδα παρουσίασης των
# δελτίων προσέλευση/αποχώρησης.
# 
# @DESCRIPTION END
#
# @HISTORY BEGIN
# Created: 2021-05-30
# @HISTORY END
#
# @END

progname="$(basename $0)"

[ -z "${PANDORA_BASEDIR}" ] &&
PANDORA_BASEDIR="/var/opt/pandora"

[ -z "${LETRAK_BASEDIR}" ] &&
LETRAK_BASEDIR="/var/opt/letrak"

erpotadir="${LETRAK_BASEDIR}/local/erpota"

[ ! -d "${erpotadir}" ] &&
mkdir --mode="777" "${erpotadir}" 2>/dev/null

[ ! -d "${erpotadir}" ] &&
echo "${progname}: ${erpotadir}: directory not found" >&2 &&
exit 2

usage() {
	echo "usage: ${progname} version" >&2
	exit 1
}

errs=

while getopts ":" opt
do
	case "${opt}" in
	:)
		echo "${progname}: -${OPTARG}: option requires an argument" >&2
		errs=1
		;;
	?)
		echo "${progname}: -${OPTARG}: invalid option" >&2
		errs=1
		;;
	esac
done

[ -n "${errs}" ] &&
usage

shift $(expr ${OPTIND} - 1)

[ $# -ne 1 ] &&
usage

case "${1}" in
1|2)
	ofile="${erpotadir}/erpota${1}.json"
	;;
*)
	echo "${progname}: $1: invalid erpota version" >&2
	exit 2
esac

php "${LETRAK_BASEDIR}/lib/erpotaJSON.php" "${1}" >"${ofile}"

errs=
[ $? -ne 0 ] && errs=1
[ ! -s "${ofile}" ] && errs=1

datalink="${LETRAK_BASEDIR}/www/public/erpotaData.js"

if [ -n "${errs}" ]; then
	rm -f "${ofile}" "${datalink}"
	exit 2
fi

exec ln -sf "${ofile}" "${datalink}"
